/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "threeNumbersHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
    ],
    name: "tierSelector",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106f6806100206000396000f3fe6080604052600436106100345760003560e01c806326839f1714610039578063f1b83cb114610055578063f1bb43c914610092575b600080fd5b610053600480360381019061004e91906104d8565b6100cf565b005b34801561006157600080fd5b5061007c600480360381019061007791906104d8565b6100e4565b6040516100899190610514565b60405180910390f35b34801561009e57600080fd5b506100b960048036038101906100b4919061052f565b610123565b6040516100c6919061059b565b60405180910390f35b6100d8346101ba565b6100e1816101ba565b50565b6000600182036100f7576001905061011e565b60028203610108576002905061011e565b60038203610119576003905061011e565b600090505b919050565b60008061012f85610253565b61013885610253565b604051602001610149929190610627565b604051602081830303815290604052905060008161016685610253565b604051602001610177929190610627565b604051602081830303815290604052905080604051602001610199919061064b565b60405160208183030381529060405280519060200120925050509392505050565b610250816040516024016101ce9190610514565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610321565b50565b6060600060016102628461034a565b01905060008167ffffffffffffffff81111561028157610280610662565b5b6040519080825280601f01601f1916602001820160405280156102b35781602001600182028036833780820191505090505b509050600082602001820190505b600115610316578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161030a57610309610691565b5b049450600085036102c1575b819350505050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106103a8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161039e5761039d610691565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106103e5576d04ee2d6d415b85acef810000000083816103db576103da610691565b5b0492506020810190505b662386f26fc10000831061041457662386f26fc10000838161040a57610409610691565b5b0492506010810190505b6305f5e100831061043d576305f5e100838161043357610432610691565b5b0492506008810190505b612710831061046257612710838161045857610457610691565b5b0492506004810190505b60648310610485576064838161047b5761047a610691565b5b0492506002810190505b600a8310610494576001810190505b80915050919050565b600080fd5b6000819050919050565b6104b5816104a2565b81146104c057600080fd5b50565b6000813590506104d2816104ac565b92915050565b6000602082840312156104ee576104ed61049d565b5b60006104fc848285016104c3565b91505092915050565b61050e816104a2565b82525050565b60006020820190506105296000830184610505565b92915050565b6000806000606084860312156105485761054761049d565b5b6000610556868287016104c3565b9350506020610567868287016104c3565b9250506040610578868287016104c3565b9150509250925092565b6000819050919050565b61059581610582565b82525050565b60006020820190506105b0600083018461058c565b92915050565b600081519050919050565b600081905092915050565b60005b838110156105ea5780820151818401526020810190506105cf565b60008484015250505050565b6000610601826105b6565b61060b81856105c1565b935061061b8185602086016105cc565b80840191505092915050565b600061063382856105f6565b915061063f82846105f6565b91508190509392505050565b600061065782846105f6565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220aff4ca5f8094852af1508c66c93f74d2020b0ed432975b97fc7cfc142f46bb8464736f6c63430008120033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  override connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
