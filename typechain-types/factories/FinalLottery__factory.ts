/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FinalLottery, FinalLotteryInterface } from "../FinalLottery";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_rnd_number",
        type: "bytes32",
      },
      {
        internalType: "int256",
        name: "tier",
        type: "int256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticket_no",
        type: "uint256",
      },
    ],
    name: "collectTicketRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticket_no",
        type: "uint256",
      },
    ],
    name: "findTicketInfosFromNo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lottery_no",
        type: "uint256",
      },
    ],
    name: "getLastOwnedTicketNo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryNoCalculator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040524260015534801561001457600080fd5b5042600181905550610d748061002b6000396000f3fe60806040526004361061007b5760003560e01c806398ea5fca1161004e57806398ea5fca14610141578063ce91aa6a1461014b578063e3d670d714610176578063f6789ca0146101b35761007b565b80632b8bdc00146100805780632e1fe450146100be5780633bed33ce146100e7578063775f1aec14610103575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108bc565b6101dc565b6040516100b5929190610914565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e091906108bc565b610342565b005b61010160048036038101906100fc91906108bc565b610345565b005b34801561010f57600080fd5b5061012a600480360381019061012591906108bc565b610467565b60405161013892919061093d565b60405180910390f35b6101496105a2565b005b34801561015757600080fd5b506101606105fa565b60405161016d9190610966565b60405180910390f35b34801561018257600080fd5b5061019d600480360381019061019891906109df565b61063a565b6040516101aa9190610966565b60405180910390f35b3480156101bf57600080fd5b506101da60048036038101906101d59190610a78565b610652565b005b60008060006001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020805490506102419190610ae7565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002081815481106102a5576102a4610b1b565b5b906000526020600020906005020160000154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020828154811061031957610318610b1b565b5b906000526020600020906005020160040160009054906101000a900460ff169250925050915091565b50565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103be90610ba7565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ae7565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610463573d6000803e3d6000fd5b5050565b60008060006104746105fa565b905060005b6001826104869190610bc7565b81101561059a5760005b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805490508110156105865785600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020828154811061054e5761054d610b1b565b5b906000526020600020906005020160000154036105735781819450945050505061059d565b808061057e90610bfb565b915050610490565b50808061059290610bfb565b915050610479565b50505b915091565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105f19190610bc7565b92505081905550565b6000804290506000600154826106109190610ae7565b90506000600162093a80836106259190610c72565b61062f9190610bc7565b905080935050505090565b60036020528060005260406000206000915090505481565b600061065c6105fa565b90506000600183148061066f5750600283145b8061067a5750600383145b6106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090610cef565b60405180910390fd5b60016000808282546106cb9190610bc7565b92505081905550600183036106e35760009050610703565b600283036106f45760019050610702565b6003830361070157600290505b5b5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c001604052806000548152602001848152602001868152602001428152602001600060ff16815260200183600381111561079557610794610d0f565b5b81525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360ff16021790555060a08201518160040160016101000a81548160ff0219169083600381111561083557610834610d0f565b5b0217905550505060046000838152602001908152602001600020600301600054908060018154018082558091505060019003906000526020600020016000909190919091505550505050565b600080fd5b6000819050919050565b61089981610886565b81146108a457600080fd5b50565b6000813590506108b681610890565b92915050565b6000602082840312156108d2576108d1610881565b5b60006108e0848285016108a7565b91505092915050565b6108f281610886565b82525050565b600060ff82169050919050565b61090e816108f8565b82525050565b600060408201905061092960008301856108e9565b6109366020830184610905565b9392505050565b600060408201905061095260008301856108e9565b61095f60208301846108e9565b9392505050565b600060208201905061097b60008301846108e9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ac82610981565b9050919050565b6109bc816109a1565b81146109c757600080fd5b50565b6000813590506109d9816109b3565b92915050565b6000602082840312156109f5576109f4610881565b5b6000610a03848285016109ca565b91505092915050565b6000819050919050565b610a1f81610a0c565b8114610a2a57600080fd5b50565b600081359050610a3c81610a16565b92915050565b6000819050919050565b610a5581610a42565b8114610a6057600080fd5b50565b600081359050610a7281610a4c565b92915050565b60008060408385031215610a8f57610a8e610881565b5b6000610a9d85828601610a2d565b9250506020610aae85828601610a63565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610af282610886565b9150610afd83610886565b9250828203905081811115610b1557610b14610ab8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610b91601483610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b6000610bd282610886565b9150610bdd83610886565b9250828201905080821115610bf557610bf4610ab8565b5b92915050565b6000610c0682610886565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c3857610c37610ab8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c7d82610886565b9150610c8883610886565b925082610c9857610c97610c43565b5b828204905092915050565b7f57726f6e6720496e707574000000000000000000000000000000000000000000600082015250565b6000610cd9600b83610b4a565b9150610ce482610ca3565b602082019050919050565b60006020820190508181036000830152610d0881610ccc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220d7322f020d4b278a1f48998ce88023f76f6c38fc44fcde2c40ac843752d44a3464736f6c63430008120033";

type FinalLotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FinalLotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FinalLottery__factory extends ContractFactory {
  constructor(...args: FinalLotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FinalLottery> {
    return super.deploy(overrides || {}) as Promise<FinalLottery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FinalLottery {
    return super.attach(address) as FinalLottery;
  }
  override connect(signer: Signer): FinalLottery__factory {
    return super.connect(signer) as FinalLottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FinalLotteryInterface {
    return new utils.Interface(_abi) as FinalLotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FinalLottery {
    return new Contract(address, _abi, signerOrProvider) as FinalLottery;
  }
}
